repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v2.4.0
    hooks:
    -   id: check-docstring-first
    -   id: check-executables-have-shebangs
    -   id: check-json
    -   id: check-merge-conflict
    -   id: check-vcs-permalinks
    -   id: check-yaml
    -   id: debug-statements
    -   id: end-of-file-fixer
    -   id: name-tests-test
    -   id: pretty-format-json
        args: ['--autofix']
    -   id: trailing-whitespace
-   repo: https://gitlab.com/pycqa/flake8
    rev: 3.7.9
    hooks:
    -   id: flake8
        additional_dependencies:
        -   flake8-bugbear==19.3.0
        -   flake8-builtins==1.4.1
        -   flake8-comprehensions==2.1.0
        -   flake8-tidy-imports==2.0.0
-   repo: https://github.com/asottile/yesqa
    rev: v0.0.11
    hooks:
    -   id: yesqa
        additional_dependencies:
        -   flake8-bugbear==19.3.0
        -   flake8-builtins==1.4.1
        -   flake8-comprehensions==2.1.0
        -   flake8-tidy-imports==2.0.0
        -   flake8==3.7.8
-   repo: https://github.com/thlorenz/doctoc
    rev: v1.4.0
    hooks:
    -   id: doctoc
        exclude: '^.github/PULL_REQUEST_TEMPLATE.md$'
-   repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.4.2
    hooks:
    -   id: python-check-mock-methods
    -   id: python-no-log-warn
    -   id: python-use-type-annotations
    -   id: rst-backticks
-   repo: https://github.com/pre-commit/mirrors-mypy
    rev: v0.760
    hooks:
    -   id: mypy
-   repo: https://github.com/asottile/pyupgrade
    rev: v1.25.2
    hooks:
    -   id: pyupgrade
        args: ['--py36-plus']
-   repo: https://github.com/asottile/reorder_python_imports
    rev: v1.8.0
    hooks:
    -   id: reorder-python-imports
        args: ['--py3-plus']
-   repo: https://github.com/psf/black
    rev: 19.10b0
    hooks:
    -   id: black
-   repo: https://github.com/asottile/blacken-docs
    rev: v1.4.0
    hooks:
    -   id: blacken-docs
        additional_dependencies:
        -   black==19.10b0
-   repo: local
    hooks:
    -   id: banned-gevent-functions
        description: |
            This hook checks for uses of gevent functions. We use wrappers around these
            functions instead, in order to make sure headers from the request context get copied. We can't
            use flake8-tidy-imports alone because of https://github.com/adamchainz/flake8-tidy-imports/issues/63.
            This check will skip tests, since sometimes we have to use the real gevent.spawn in there.
        name: check for banned gevent functions
        language: pygrep
        entry: 'gevent\.spawn\(\b'
        types: [python]
        exclude: 'tests'
    -   id: banned-greenlet
        description: |
            See above
        name: check for Greenlet()
        language: pygrep
        entry: 'Greenlet\('
        types: [python]
        exclude: 'tests'
    -   id: banned-libraries
        description: |
            These libraries should not be set in requirements.in. See
            https://groups.google.com/a/lyft.com/d/msg/eng-all/McaajPfo33k/jZjDLjtZBgAJ
        name: banned libraries
        language: pygrep
        entry: analyticsclient
        files: requirements.in
